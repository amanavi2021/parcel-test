{"mappings":"AACA,SAAAA,gBAAAC,EAAAC,G,gdAAMC,MAAMC,KAAKC,MAEjBC,QAAQC,IAAIJ,OAGZK,YAAW,WACX,IAAMC,EAAQL,KAAKC,MACnBC,QAAQC,IAAIE,EAAQN,M,GAEjB,KAGH,IAAMO,KAAK,CACPC,SAAUC,SAASC,cAAc,6BACjCC,QAASF,SAASC,cAAc,4BAChCE,UAAWH,SAASC,cAAc,kBAEtCG,MA+CG,W,sBA/CGA,EACUC,G,IAAAC,EAAAD,EAACC,O,wBACTC,KAAKC,WAAa,KAClBD,KAAKE,UAAW,EAChBF,KAAKD,OAASA,EACdC,KAAKG,M,yBAGTC,IAAA,O,MAAA,WACI,IAAMC,EAAOL,KAAKM,kBAAkB,GACpCN,KAAKD,OAAOM,E,IAGhBD,IAAA,Q,MAAA,W,WACI,IAAGJ,KAAKE,SAAR,CAGA,IAAMK,EAAYtB,KAAKC,MACvBc,KAAKE,UAAS,EACdF,KAAKC,WAAaO,aAAY,WAC1B,IACMC,EADcxB,KAAKC,MACKqB,EACxBF,EAAOK,EAAKJ,kBAAkBG,GACpCC,EAAKX,OAAOM,E,GACT,IATH,C,IAYRD,IAAA,O,MAAA,WACIO,cAAcX,KAAKC,YACnBD,KAAKE,UAAS,EACd,IAAMG,EAAOL,KAAKM,kBAAkB,GACpCN,KAAKD,OAAOM,E,IAGhBD,IAAA,oB,MAAA,SAAkBC,GAKd,MAAO,CAAEO,MAJKZ,KAAKa,IAAIC,KAAKC,MAAMV,EAAS,MAAiB,OAI5CW,KAFJhB,KAAKa,IAAIC,KAAKC,MAAMV,EAAS,KAAc,MAEjCY,KADTjB,KAAKa,IAAIC,KAAKC,MAAMV,EAAS,IAAU,M,IAIxDD,IAAA,M,MAAA,SAAIc,GACA,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,OAItC,GAAGC,MAAQ,IAAIxB,MAAM,CACpBE,OAAQuB,kBAQZ,SAASA,gBAAgBxB,G,IAACc,EAADd,EAACc,MAAOI,EAARlB,EAAQkB,KAAKC,EAAbnB,EAAamB,KACtC1B,KAAKK,UAAU2B,YAAa,GAAYC,OAATZ,EAAM,KAAWY,OAARR,EAAK,KAAQQ,OAALP,E,CALhD1B,KAAKC,SAASiC,iBAAiB,QAASJ,MAAMK,MAAMC,KAAKN,QAEzD9B,KAAKI,QAAQ8B,iBAAiB,QAASJ,MAAMO,KAAKD,KAAKN,QAQvDlC,QAAQC,IAAIyC,QAAO,IAAI5C","sources":["src/16-timer.js"],"sourcesContent":["// const date1 =new Date().getTime();\nconst date1=Date.now();\n// console.log(date.getTime());\nconsole.log(date1);\n\n\nsetTimeout(()=> {\nconst date2 = Date.now();\nconsole.log(date2 - date1);\n\n}, 3000);\n\n// Таймер\nconst refs={\n    startBtn: document.querySelector('button[data-action-start]'),\n    stopBtn: document.querySelector('button[data-action-stop]'),\n    clockface: document.querySelector('.js-clockface'),\n};\nclass Timer {\n    constructor({onTick}) {\n        this.intervalId = null;\n        this.isActive = false;\n        this.onTick = onTick;\n        this.init();\n\n    }\n    init() {\n        const time = this.getTimeComponents(0);\n        this.onTick(time);\n    }\n\n    start() {\n        if(this.isActive) {\n            return;\n        }\n        const startTime = Date.now();\n        this.isActive=true;\n        this.intervalId = setInterval(()=> {\n            const currentTime = Date.now();\n            const deltaTime = currentTime-startTime;\n            const time = this.getTimeComponents(deltaTime);\n            this.onTick(time);\n            }, 1000);\n    }\n\n    stop(){\n        clearInterval(this.intervalId);\n        this.isActive=false;\n        const time = this.getTimeComponents(0);\n        this.onTick(time);\n    }\n\n    getTimeComponents(time) {\n        const hours = this.pad(Math.floor((time % (1000*60*60*24))/(1000*60*60)),\n        );\n        const mins =this.pad(Math.floor((time % (1000*60*60))/(1000*60)));\n        const secs = this.pad(Math.floor((time % (1000*60))/1000));\n        return { hours, mins, secs };\n    }\n\n    pad(value) {\n        return String(value).padStart(2, '0');\n    }\n}\n\nconst timer = new Timer({\n    onTick: updateClockface\n});\n\n\nrefs.startBtn.addEventListener('click', timer.start.bind(timer));\n\nrefs.stopBtn.addEventListener('click', timer.stop.bind(timer));\n\nfunction updateClockface({hours, mins,secs}) {\nrefs.clockface.textContent =`${hours}:${mins}:${secs}`;\n}\n\n// \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\nconsole.log(typeof new Date());\n"],"names":["_classCallCheck","instance","Constructor","date1","Date","now","console","log","setTimeout","date2","refs","startBtn","document","querySelector","stopBtn","clockface","Timer","param","onTick","this","intervalId","isActive","init","key","time","getTimeComponents","startTime","setInterval","deltaTime","_this","clearInterval","hours","pad","Math","floor","mins","secs","value","String","padStart","timer","updateClockface","textContent","concat","addEventListener","start","bind","stop","_typeof"],"version":3,"file":"index-data.477d1207.js.map"}